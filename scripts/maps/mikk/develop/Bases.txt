
@BaseClass = bAngles
[
    angles(string) : "Pitch Yaw Roll (X Y Z)" : "0 0 0"
]

@BaseClass = bTarget
[
    target(target_destination) : "target"
]

@BaseClass = bMaster
[
    master(string) : "Master"
]

@BaseClass base(bMaster) = bMasterCustom
[
    $s_TriggerOnMaster(target_destination) : "Target when locked by master"
]

@BaseClass = bDelay
[
    delay(float) : "Delay Before Trigger" : 0.0
]

@BaseClass = bKilltarget
[
    killtarget(target_destination) : "Kill target"
]

@BaseClass = bBBox
[
    minhullsize(string) : "Minimun BBox Size"
    maxhullsize(string) : "Maximun BBox Size"
]

@BaseClass = bCustomModel
[
    model(studio) : "Model"
    sequence(integer) : "Animation Sequence (editor)" : 0
]
@BaseClass = bRendermode
[
    rendermode(choices) : "Render Mode" : 0 =
    [
        0: "Normal"
        1: "Color"
        2: "Texture"
        3: "Glow"
        4: "Solid"
        5: "Additive"
    ]
]
@BaseClass = bRenderamt
[
    renderamt(integer) : "FX Amount (1 - 255)" : 255
]
@BaseClass = bRendercolor
[
    rendercolor(color255) : "FX Color (R G B)" : "0 0 0"
]
@BaseClass base( bRendermode, bRenderamt, bRendercolor ) = bRendering
[
    renderfx(choices) : "Render FX" : 0 =
    [
        0: "Normal"
        1: "Slow Pulse"
        2: "Fast Pulse"
        3: "Slow Wide Pulse"
        4: "Fast Wide Pulse"
        9: "Slow Strobe"
        10: "Fast Strobe"
        11: "Faster Strobe"
        12: "Slow Flicker"
        13: "Fast Flicker"
        5: "Slow Fade Away"
        6: "Fast Fade Away"
        7: "Slow Become Solid"
        8: "Fast Become Solid"
        14: "Constant Glow"
        15: "Distort"
        16: "Hologram (Distort + fade)"
        17: "Dead Player (DONT USE!)"
        18: "Explode (Garg Like)"
        19: "Glow Shell"
        20: "ClampMinScale (Sprites)"
    ]
]

@BaseClass = bClassicMode
[
    $i_classic_mode_ignore(choices) : "[AS] Classic Mode" : 0 =
    [
        0: "Replace (config_classic_mode)"
        1: "Ignore entity"
    ]
]

@BaseClass = bAttackObject
[
    classify(choices) : "Classification" : 0 =
    [
        -1 : "None"
        0 : "Default"
        1 : "Machine"
        2 : "Player"
        3 : "Human Passive"
        4 : "Human Military"
        5 : "Alien Military"
        6 : "Alien Passive"
        7 : "Alien Monster"
        8 : "Alien Prey"
        9 : "Alien Predator"
        10 : "Insect"
        11 : "Player Ally"
        12 : "Player Hornet/Snark"
        13 : "Alien Hornet/Snark"
        14 : "X-Race"
        15 : "X-Race: Shocktrooper/Voltigore"
        16 : "Team 1"
        17 : "Team 2"
        18 : "Team 3"
        19 : "Team 4"
    ]
]

@BaseClass = bZHLTbmodel
[
    zhlt_usemodel(string) : "[ZHLT] Template Model target"
    zhlt_copylight(string) : "[ZHLT] Copy Lighting From target"
    zhlt_noclip(choices) : "[ZHLT] Disable Clipping" : 0 =
    [
        0 : "Default"
        1 : "Always non-solid"
    ]
    zhlt_invisible(choices) : "[ZHLT] Invisible" : 0 =
    [
        0 : "Visible (default)"
        1 : "Invisible"
    ]
    zhlt_customshadow(string) : "[ZHLT] Custom Shadow (when opaque)"
    zhlt_embedlightmap(choices) : "[ZHLT] Embed Light Map (when translucent)" : 0 =
    [
        0 : "No (default)"
        1 : "Yes"
    ]
    zhlt_embedlightmapresolution(integer) : "[ZHLT] Embed Light Map Resolution" : 4
]

@BaseClass base(bZHLTbmodel) = bZHLT
[
    zhlt_lightflags(choices) : "[ZHLT] Light flags" : 0 =
    [
        0 : "Default"
        1 : "Embedded Fix"
        2 : "Opaque (blocks light)"
        3 : "Opaque + Embedded fix"
        6 : "Opaque + Concave Fix"
    ]
    light_origin(string) : "[ZHLT] Light Origin target"
]

@BaseClass = bZHLTpoint
[
    _fade(string) : "[ZHLT] Light Fade" : "1.0"
    _falloff(choices) : "[ZHLT] Light Falloff" : 0 =
    [
        0 : "Default"
        1 : "Inverse Linear"
        2 : "Inverse Square"
    ]
]



@BaseClass = bInventoryRules
[
    item_name_required(string) : "[INV] Need item(s)" : ""
    item_group_required(string) : "[INV] Need item(s) from group(s)" : ""
    item_group_required_num(integer) : "[INV] item count in group need have (0 = all)" : 0
    item_name_canthave(string) : "[INV] CAN'T have item" : ""
    item_group_canthave(string) : "[INV] CAN'T have item from group" : ""
    item_group_canthave_num(integer) : "[INV] item count in group CAN'T have (0 = all)" : 0
    pass_ignore_use_triggers(choices) : "[INV] On pass: Ignore item's on use triggers?" : 0 =
    [
        0 : "No"
        1 : "Yes"
    ]
    pass_drop_item_name(string) : "[INV] On pass: Drop item(s)"
    pass_drop_item_group(string) : "[INV] On pass: Drop item(s) from group(s)"
    pass_ignore_drop_triggers(choices) : "[INV] On pass: Ignore item's on drop triggers?" : 0 =
    [
        0 : "No"
        1 : "Yes"
    ]
    pass_return_item_name(string) : "[INV] On pass: Return item(s)"
    pass_return_item_group(string) : "[INV] On pass: Return item(s) from group(s)"
    pass_ignore_return_triggers(choices) : "[INV] On pass: Ignore item's on return triggers?" : 0 =
    [
        0 : "No"
        1 : "Yes"
    ]
    pass_destroy_item_name(string) : "[INV] On pass: Destroy item(s)"
    pass_destroy_item_group(string) : "[INV] On pass: Destroy item(s) from group(s)"
    pass_ignore_destroy_triggers(choices) : "[INV] On pass: Ignore item's on destroy triggers?" : 0 =
    [
        0 : "No"
        1 : "Yes"
    ]
    target_on_fail(target_destination) : "[INV] target: Inventory rules failed"
]


@BaseClass size(-8 -8 0, 8 8 16) color(0 0 200) base(bCustomModel, bPickup, bCustomRespawnDelay, bClassicMode, bBBox) = bItem
[
    skin(integer) : "Skin" : 0
    body(integer) : "Body" : 0
    sequencename(string) : "Sequence Name" : "idle"
    sequence(integer) : "Sequence Number (overrides name)" : 0
    scale(string) : "Scale Model" : "1"

    soundlist(string) : "Sound Replacement File"
]
@BaseClass size(-8 -8 0, 8 8 16) color(0 0 200) base(bPickup, bClassicMode, bBBox) = bItemWithDefaultModel
[
    solid(choices) : "Solid Setting" : 0 =
    [
        -1: "Hollow"
        0: "Touch on edge, non-blocking (default)"
        2: "Touch on edge, blocking (requires hull sizes!)"
    ]
    model(studio) : "Custom Model" : "models/egg.mdl"
    skin(integer) : "Skin" : 0
    body(integer) : "Body" : 0
    sequencename(string) : "Sequence Name" : "idle"
    sequence(integer) : "Sequence Number (overrides name)" : 0
    scale(string) : "Scale Model" : "1"

    soundlist(string) : "Sound Replacement File"
]

@BaseClass base(bTargetname, bTarget, bKilltarget, bMaster , bFilterIn, bFilterOut, bInventoryRules, bZHLTbmodel) = bTrigger
[
    netname(target_destination) : "target Path"
    sounds(choices) : "Sound style" : 0 =
    [
        0 : "No Sound"
    ]
    message(string) : "Message (set sound too!)"
    tiny_monsters(choices) : "Allow tiny monsters (insects/hornets)" : 0 =
    [
        0 : "No"
        1 : "Yes"
    ]
    spawnflags(flags) =
    [
        1: "Monsters" : 0
        2: "No Clients" : 0
        4: "Pushables": 0
        8: "Everything else": 0
        16: "Fire On Enter": 0
        32: "Fire On Exit": 0
    ]
]